(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{356:function(s,a,t){s.exports=t.p+"assets/img/NewMergeRequest.0a01e33b.jpg"},357:function(s,a,t){s.exports=t.p+"assets/img/NewMergeRequest2.44659c0f.jpg"},358:function(s,a,t){s.exports=t.p+"assets/img/NewMergeRequest3.0482bd34.jpg"},359:function(s,a,t){s.exports=t.p+"assets/img/NewMergeRequest4.14b73c1d.jpg"},389:function(s,a,t){"use strict";t.r(a);var e=t(42),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"git操作说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git操作说明"}},[s._v("#")]),s._v(" Git操作说明")]),s._v(" "),e("blockquote",[e("p",[s._v("git 仓库提交合并操作流程,避免合并冲突或代码丢失，以及方便进行 code review")])]),s._v(" "),e("h5",{attrs:{id:"注意-1-master-和版本分支上绝对不能直接进行操作-2-使用小乌龟可以只看文字和图片部分-不用看命令行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意-1-master-和版本分支上绝对不能直接进行操作-2-使用小乌龟可以只看文字和图片部分-不用看命令行"}},[s._v("#")]),s._v(" 注意：1.master 和版本分支上绝对不能直接进行操作; 2.使用小乌龟可以只看文字和图片部分，不用看命令行")]),s._v(" "),e("h2",{attrs:{id:"正常操作流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正常操作流程"}},[s._v("#")]),s._v(" 正常操作流程")]),s._v(" "),e("h4",{attrs:{id:"_1-获取当前版本分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取当前版本分支"}},[s._v("#")]),s._v(" 1.获取当前版本分支")]),s._v(" "),e("p",[s._v("每次版本迭代都会在 master 的基础上新建一个当前版本的分支，如 dev_14_test")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull dev_14_test\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"_2-从版本分支创建个人分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-从版本分支创建个人分支"}},[s._v("#")]),s._v(" 2.从版本分支创建个人分支")]),s._v(" "),e("p",[s._v("任何代码的修改都不能在版本分支上操作，必需得基于版本分支创建个人分支")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b dev_personal_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"_3-代码修改与提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-代码修改与提交"}},[s._v("#")]),s._v(" 3.代码修改与提交")]),s._v(" "),e("p",[s._v("在个人分支上修改代码完成后将个人分支推到远端库中，在远端库中与版本分支进行合并请求")]),s._v(" "),e("h6",{attrs:{id:"如果是首次推到远端-执行以下命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果是首次推到远端-执行以下命令"}},[s._v("#")]),s._v(" # 如果是首次推到远端，执行以下命令")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push --set-upstream origin dev_personal_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h6",{attrs:{id:"如果已经推到远端则直接push"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果已经推到远端则直接push"}},[s._v("#")]),s._v(" # 如果已经推到远端则直接push")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"_4-远端gitlab操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-远端gitlab操作"}},[s._v("#")]),s._v(" 4.远端GitLab操作")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("提交后到远端进行合并操作，进入到 GitLab 页面，左侧菜单中选择 Merge Requests，选择右上角绿色按钮 ‘New merge request’，进入到下图页面，左侧为个人修改的分支，右侧选择被合并的目标分支，然后点击 Compare branches and continue 按钮\n"),e("img",{attrs:{src:t(356),alt:"git"}})])]),s._v(" "),e("li",[e("p",[s._v("进入到合并请求提交页确认合并信息")])])]),s._v(" "),e("h5",{attrs:{id:"title-填写修改代码的标题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#title-填写修改代码的标题"}},[s._v("#")]),s._v(" # Title：填写修改代码的标题")]),s._v(" "),e("h5",{attrs:{id:"description-修改描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#description-修改描述"}},[s._v("#")]),s._v(" # Description：修改描述")]),s._v(" "),e("h5",{attrs:{id:"assignee-提交人"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#assignee-提交人"}},[s._v("#")]),s._v(" # Assignee：提交人")]),s._v(" "),e("h5",{attrs:{id:"source-branch-想要合并的个人分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#source-branch-想要合并的个人分支"}},[s._v("#")]),s._v(" # Source branch：想要合并的个人分支")]),s._v(" "),e("h5",{attrs:{id:"target-branch-被合并的目标分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#target-branch-被合并的目标分支"}},[s._v("#")]),s._v(" # Target branch：被合并的目标分支")]),s._v(" "),e("h5",{attrs:{id:"remove-source-branch-when-merge-request-is-accepted-合并后在远端移除个人分支-建议勾选-避免远端分支过多"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remove-source-branch-when-merge-request-is-accepted-合并后在远端移除个人分支-建议勾选-避免远端分支过多"}},[s._v("#")]),s._v(" # Remove source branch when merge request is accepted：合并后在远端移除个人分支(建议勾选，避免远端分支过多)")]),s._v(" "),e("h5",{attrs:{id:"commits-查看合并的-commits-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commits-查看合并的-commits-log"}},[s._v("#")]),s._v(" # Commits：查看合并的 commits log")]),s._v(" "),e("h5",{attrs:{id:"changes-查看合并的代码修改-方便进行-code-review"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changes-查看合并的代码修改-方便进行-code-review"}},[s._v("#")]),s._v(" # Changes：查看合并的代码修改，方便进行 code review")]),s._v(" "),e("p",[e("img",{attrs:{src:t(357),alt:"git"}})]),s._v(" "),e("ul",[e("li",[s._v("合并信息确认后点击按钮 Submit merge request 进入合并确认页")])]),s._v(" "),e("h5",{attrs:{id:"如果先前没有勾选-remove-source-branch-when-merge-request-is-accepted-该页也可以选择勾选-remove-source-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果先前没有勾选-remove-source-branch-when-merge-request-is-accepted-该页也可以选择勾选-remove-source-branch"}},[s._v("#")]),s._v(" # 如果先前没有勾选 Remove source branch when merge request is accepted，该页也可以选择勾选 Remove source branch")]),s._v(" "),e("h5",{attrs:{id:"discussion-其他开发者可以对本次合并请求进行评价"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#discussion-其他开发者可以对本次合并请求进行评价"}},[s._v("#")]),s._v(" # Discussion：其他开发者可以对本次合并请求进行评价")]),s._v(" "),e("h5",{attrs:{id:"commits-检查合并的commits-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commits-检查合并的commits-log"}},[s._v("#")]),s._v(" # Commits：检查合并的commits log")]),s._v(" "),e("h5",{attrs:{id:"changes-检查合并的代码变更-在合并前最重要的步骤-查看所有修改代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changes-检查合并的代码变更-在合并前最重要的步骤-查看所有修改代码"}},[s._v("#")]),s._v(" # Changes：检查合并的代码变更，在合并前最重要的步骤，查看所有修改代码")]),s._v(" "),e("p",[e("img",{attrs:{src:t(358),alt:"git"}})]),s._v(" "),e("ul",[e("li",[s._v("全部确认无误后点击绿色按钮 Merge 合并分支")])]),s._v(" "),e("hr"),s._v(" "),e("h2",{attrs:{id:"异常情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异常情况"}},[s._v("#")]),s._v(" 异常情况")]),s._v(" "),e("p",[s._v("很多情况下都会导致合并冲突，比如两个分支中同时修改了一段代码，或者 commits 错乱等\n一下情况是两个分支同时修改了同一段代码导致冲突")]),s._v(" "),e("p",[s._v("此处我在 dev_14_test 上新建的个分支 dev_personal_branch_err，修改了刚刚 dev_personal_branch 分支上同一段代码并提交")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout dev_14_test\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b dev_personal_branch_err\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("img",{attrs:{src:t(359),alt:"git"}})]),s._v(" "),e("p",[s._v("此时 Merge 按钮无法点击，阻止错误继续下去，有很多方法可以解决冲突，个人比较喜欢用 rebase 的方式解决")]),s._v(" "),e("h5",{attrs:{id:"首先声明-所以操作都只能是在个人的分支上进行操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#首先声明-所以操作都只能是在个人的分支上进行操作"}},[s._v("#")]),s._v(" 首先声明，所以操作都只能是在个人的分支上进行操作")]),s._v(" "),e("ul",[e("li",[s._v("第一步是先 copy 个人分支作为备份，以免误操作导致修改代码丢失")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout dev_personal_branch_err\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -b copy_dev_personal_branch_err\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout dev_personal_branch_err\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("然后我们再回到 dev_personal_branch_err 分支上，基于远端的 dev_14_test 分支就行 rebase 操作")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull --rebase origin dev_14_test\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("此时就会显示冲突的情况")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("First, rewinding "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" to replay your work on "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" of it"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nApplying: 冲突代码\nUsing index info to reconstruct a base tree"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nM\tREADME.md\nFalling back to patching base and "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("-way merge"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nAuto-merging README.md\nCONFLICT "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": Merge conflict "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" README.md\nerror: Failed to merge "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the changes.\nPatch failed at 0001 冲突代码\nThe copy of the patch that failed is found in: .git/rebase-apply/patch\n\nResolve all conflicts manually, mark them as resolved with\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add/rm <conflicted_files>"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" run "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase --continue"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nYou can instead skip this commit: run "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase --skip"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nTo abort and get back to the state before "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase"')]),s._v(", run "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase --abort"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("ul",[e("li",[s._v("查看 git 状态")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\nrebase "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" progress"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" onto 1ad7cd0\nYou are currently rebasing branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dev_personal_branch_err'")]),s._v(" on "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1ad7cd0'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fix conflicts and "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" run "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase --continue"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase --skip"')]),s._v(" to skip this patch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase --abort"')]),s._v(" to check out the original branch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nUnmerged paths:\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git reset HEAD <file>..."')]),s._v(" to unstage"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add <file>..."')]),s._v(" to mark resolution"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\tboth modified:   README.md\n\nno changes added to commit "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add"')]),s._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git commit -a"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("ul",[e("li",[e("p",[s._v("说明 README.md 文件有冲突，之后就是前往代码解决冲突，这里就不展示了")])]),s._v(" "),e("li",[e("p",[s._v("修改完成后 git add，然后执行 git rebase --continue，如果有多次 commit 提交，会检查每一次 commit 是否有冲突，有可能需要重复解决冲突多次")])])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" README.md\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase --continue\n    \n    Applying: 冲突代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ul",[e("li",[s._v("当所有 commits 都 Applying 后，首先要检查代码运行是否正常，是否功能满足需求，然后将目前的 dev_personal_branch_err 分支推到远端，此时需要用到强推，因为变更了原先的该分支的 commit")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("    "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin dev_personal_branch_err -f \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("此时再到 GItLab 中查看，发现 Merge 按钮 变成可点击状态了")]),s._v(" "),e("hr"),s._v(" "),e("h2",{attrs:{id:"tortoisesvn-小乌龟-相关操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tortoisesvn-小乌龟-相关操作"}},[s._v("#")]),s._v(" TortoiseSVN（小乌龟）相关操作")]),s._v(" "),e("p",[s._v("小乌龟的相关操作也要符合整套流程")]),s._v(" "),e("h4",{attrs:{id:"原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原则"}},[s._v("#")]),s._v(" 原则")]),s._v(" "),e("ul",[e("li",[s._v("对于 master 和版本分支，本地只有 pull 的权限，没有 push 的权限")]),s._v(" "),e("li",[s._v("所有代码修改都只能在本地和远端的个人分支上进行修改")]),s._v(" "),e("li",[s._v("如果要对其他开发者的分支进行操作，将其他开发者的分支当做 master 或版本分支执行上面相同流程")]),s._v(" "),e("li",[s._v("所有合并请求都在远端进行，避免冲突的忽视以及有迹可循")]),s._v(" "),e("li",[s._v("在合并前code review ‘Changes’ 中的修改代码是否有明显问题")])])])}),[],!1,null,null,null);a.default=r.exports}}]);